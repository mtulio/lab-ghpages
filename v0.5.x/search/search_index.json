{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>version v0.5.x</p>"},{"location":"TODO/","title":"Development Guide","text":"<p>TODO: Work in Progress!</p> <ul> <li>Flow diagram</li> </ul> <pre><code>sequenceDiagram\n    participant dotcom\n    participant iframe\n    participant viewscreen\n    dotcom-&gt;&gt;iframe: loads html w/ iframe url\n    iframe-&gt;&gt;viewscreen: request template\n    viewscreen-&gt;&gt;iframe: html &amp; javascript\n    iframe-&gt;&gt;dotcom: iframe ready\n    dotcom-&gt;&gt;iframe: set mermaid data on iframe\n    iframe-&gt;&gt;iframe: render mermaid</code></pre> <ul> <li>mkdocs:</li> </ul> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <ul> <li>sequence:</li> </ul> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"TODO/#references","title":"References","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/diagrams/#configuration</li> </ul>"},{"location":"sample-diagram-cloud/","title":"Sample diagram","text":"<p>Reference:</p> <ul> <li>https://pypi.org/project/mkdocs-diagrams/</li> <li>https://diagrams.mingrammer.com/docs/getting-started/examples</li> </ul>"},{"location":"sample-diagram-mermaid/","title":"Diagrams Mermaid","text":"<ul> <li>Flow diagram</li> </ul> <pre><code>sequenceDiagram\n    participant dotcom\n    participant iframe\n    participant viewscreen\n    dotcom-&gt;&gt;iframe: loads html w/ iframe url\n    iframe-&gt;&gt;viewscreen: request template\n    viewscreen-&gt;&gt;iframe: html &amp; javascript\n    iframe-&gt;&gt;dotcom: iframe ready\n    dotcom-&gt;&gt;iframe: set mermaid data on iframe\n    iframe-&gt;&gt;iframe: render mermaid</code></pre> <ul> <li>mkdocs:</li> </ul> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <ul> <li>sequence:</li> </ul> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"sample-diagram-mermaid/#references","title":"References","text":"<ul> <li>https://squidfunk.github.io/mkdocs-material/reference/diagrams/#configuration</li> </ul>"},{"location":"opct/cluster-aws/","title":"OPCT - OCP Cluster AWS","text":"<p>Sample diagram of OCP Cluster installed on AWS</p>"},{"location":"opct/cluster-aws/#infra-resources","title":"Infra Resources","text":""},{"location":"opct/cluster-aws/#flow-opct","title":"Flow OPCT","text":"<pre><code>sequenceDiagram\n  autonumber\n  OPCT-&gt;&gt;OCP/KAS: ./opct run -w [opts]\n  loop Setup\n      OCP/KAS-&gt;&gt;OCP/KAS: Preflight Checks\n      OCP/KAS-&gt;&gt;OCP/KAS: Create Resources (RBAC, NS)\n  end\n  OCP/KAS-&gt;&gt;Sonobuoy: create server\n  Sonobuoy-&gt;&gt;Plugins: create plugins\n  loop Init\n      Plugins-&gt;&gt;Plugins: Extract utilities\n      Plugins-&gt;&gt;Plugins: Wait for Blocker plugin\n      Plugins-&gt;&gt;Sonobuoy: report progress\n  end\n  Plugins-&gt;&gt;Plugins: Plugin-N Unblocked\n  Plugins-&gt;&gt;P_Upgrade: run cluster upgrade*\n  Note right of Plugins: *--mode=upgrade\n  P_Upgrade-&gt;&gt;Sonobuoy: report progress\n  P_Upgrade-&gt;&gt;Sonobuoy: save results\n  Plugins-&gt;&gt;P_Conformance: run conformance plugins: kubernetes, openshift\n  P_Conformance-&gt;&gt;P_Conformance: kubernetes e2e tests\n  P_Conformance-&gt;&gt;Sonobuoy: report progress\n  P_Conformance-&gt;&gt;Sonobuoy: save results\n\n  P_Conformance-&gt;&gt;P_Conformance: openshift e2e tests\n  P_Conformance-&gt;&gt;Sonobuoy: report progress\n  P_Conformance-&gt;&gt;Sonobuoy: save results\n\n  Plugins-&gt;&gt;P_Artifacts: run plugin: collect artifacts\n  P_Artifacts-&gt;&gt;Sonobuoy: report progress\n  P_Artifacts-&gt;&gt;Sonobuoy: save results\n  Sonobuoy-&gt;&gt;OCP/KAS: collect cluster objects\n  Sonobuoy-&gt;&gt;Sonobuoy: Post Processor\n  Sonobuoy-&gt;&gt;Sonobuoy: Finished Artifacts\n  Sonobuoy-&gt;&gt;OPCT: Show Summary\n  OPCT-&gt;&gt;Sonobuoy: ./opct retrieve\n  OPCT-&gt;&gt;OPCT: ./opct results &lt;result&gt;.tar.gz\n  OPCT-&gt;&gt;OCP/KAS: ./opct destroy\n  OCP/KAS-&gt;&gt;OPCT: Finished</code></pre>"},{"location":"opct/cluster-aws/#opct-validation-environment","title":"OPCT Validation Environment","text":""},{"location":"opct/cluster-aws/#opct-plugin","title":"OPCT Plugin","text":""}]}